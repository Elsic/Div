{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "tenantstorType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "tenantvnetName": {
      "type": "string"
    },
    "tenantname": {
      "type": "string"
    },
    "tenantstor2Type": {
      "type": "string",
      "defaultValue": "Standard_GRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "TenantVnetPrefix": "10.2.0.0/16",
    "GatewaySubnetName": "GatewaySubnet",
    "GatewaySubnetPrefix": "10.2.2.0/29",
    "TenantVnetSubnet2Name": "[concat(parameters('tenantname'), '_Subnet')]",
    "TenantVnetSubnet2Prefix": "10.2.1.0/24",
    "tenantstorName": "[concat(parameters('tenantname'), uniqueString(resourceGroup().id))]",
    "tenantstor2Name": "[concat(parameters('tenantname'),'2', uniqueString(resourceGroup().id))]",
    "NSGName": "[concat(parameters('tenantname'), '_NSG')]"
  },
    "resources": [
      {
        "name": "[parameters('tenantvnetName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('NSGName'))]"
        ],
        "tags": {
          "tenantName" : "[parameters('tenantname')]"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('TenantVnetPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('GatewaySubnetName')]",
              "properties": {
                "addressPrefix": "[variables('GatewaySubnetPrefix')]"
              }
            },
            {
              "name": "[variables('TenantVnetSubnet2Name')]",
              "properties": {
                "addressPrefix": "[variables('TenantVnetSubnet2Prefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName'))]"
                }
              }
            }
          ]
        }
      },
        {
            "name": "[variables('tenantstorName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [ ],
          "tags": {
            "tenantName": "[parameters('tenantname')]"
          },
            "properties": {
                "accountType": "[parameters('tenantstorType')]"
            }
        },
        {
        "name": "[variables('tenantstor2Name')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-06-15",
        "dependsOn": [ ],
        "tags": {
          "tenantName": "[parameters('tenantname')]"
        },
        "properties": {
          "accountType": "[parameters('tenantstor2Type')]"
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('NSGName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "tenantName": "[parameters('tenantname')]"
        },
        "properties": {
          "securityRules": [
            {
              "name": "rdp-rule",
              "properties": {
                "description": "Allow RDP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            }
          ]
        }

      }
    ],
    "outputs": {
    }
}
